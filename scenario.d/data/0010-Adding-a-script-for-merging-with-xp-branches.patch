From d3034d13a5ba54e582112396f9df25f53779c43d Mon Sep 17 00:00:00 2001
From: Luka Stanisic <luka.stanisic@imag.fr>
Date: Mon, 11 Jan 2016 17:32:05 +0100
Subject: [PATCH 10/25] Adding a script for merging with xp# branches


diff --git a/LabBook.org b/LabBook.org
index f6988b7dfe1f0fb2c85cf61815f396f0167133b6..1e781de3ba949d117dd7d97613deb143ed2f691c 100644
--- a/LabBook.org
+++ b/LabBook.org
@@ -316,7 +316,6 @@ fi
   cd $basename
 #+end_src

-
 **** get_info.sh
  :PROPERTIES:
  :header-args:    :tangle get_info.sh
@@ -327,7 +326,7 @@ fi
      - Capturing all the necessary metadata.
      - Enlarge it (or change it) according to your specific needs.

-***** Initial variables, help and their parsing.
+***** Initial variables, help and their parsing
       Bash preamble.

 #+begin_src sh
@@ -481,6 +480,116 @@ then
 fi
 #+end_src

+**** git_merge.sh
+ :PROPERTIES:
+ :header-args:    :tangle git_merge.sh
+ :END:
+     This script should automatize merging /data/ branch with all /xp#/
+     branches.
+
+***** Initialization and help
+      Bash preamble.
+
+#+begin_src sh
+#!/bin/bash
+# Script for doing merging between src(or new_data) and data branches
+# Shall always be called from data branch
+
+set -e # fail fast
+#+end_src
+
+     Writing the help output, to help users invoke the script.
+
+#+begin_src sh
+# Parsing help
+help_script()
+{
+cat << EOF
+Usage: $0 options
+
+Script for running kernel that measures caches
+
+OPTIONS:
+   -h      Show this message
+   -b      Name of the other branch with whome we are branching
+   -m      Merging with master branch
+EOF
+}
+# Parsing options
+while getopts "b:mh" opt; do
+  case $opt in
+    m)
+      branchname="master"
+      ;;
+    b)
+      branchname=$OPTARG
+      ;;
+    h)
+      help_script
+      exit 4
+      ;;
+    \?)
+      echo "Invalid option: -$OPTARG"
+      help_script
+      exit 3
+      ;;
+  esac
+done
+#+end_src
+
+***** Merging
+      Cheking if we are in data branch.
+
+#+begin_src sh
+current_branch=$(git symbolic-ref --short HEAD)
+echo "Now you are in git branch: ${current_branch}"
+# Checking the name of the branch is data
+if [[ "$current_branch" != data ]]; then
+    echo "ERROR-cannot do merging if we are not in data branch!"
+    exit 1
+fi
+#+end_src
+
+      Checking if everything is commited in this branch.
+
+#+begin_src sh
+if git diff-index --quiet HEAD --; then
+    echo "Everything is commited in this branch"
+else
+    echo "ERROR-need to commit everything in this branch before merging!"
+    git status
+    exit 2
+fi
+#+end_src
+
+      Checking if there are some source changes in /xp#/ branch that
+      first need reverting.
+
+#+begin_src sh
+root=""
+changes=""
+# Getting the common ancestor
+root=$(git merge-base master $branchname)
+set +e # For NULL case
+# Getting the files with differences
+changes=$(git diff --name-only $root $branchname | grep -v data | grep -v LabBook | grep -v .starpu)
+set -e
+if [ -n "$changes" ]; then
+    echo "ERROR-Changes to source/R inside new data branch!"
+    echo $changes
+    echo "Do the revert of source/R changes inside ${branchname}"
+    exit 3
+fi
+#+end_src
+
+     Merging /data/ branch with /xp#/ branch.
+
+#+begin_src sh
+git merge $branchname -s recursive -Xours -m "Merging with $branchname branch"
+
+echo "MERGING IS DONE SUCCESSFULLY!"
+#+end_src
+
 *** src/
 **** parallelQuicksort.c
      - A filed copied from Arnaud Legrand, which he used for his
--
2.8.0.rc3

